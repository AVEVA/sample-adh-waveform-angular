trigger:
  batch: true
  branches:
    include:
      - main

pr:
  branches:
    include:
      - main

schedules:
  - cron: '0 0 * * 0'
    displayName: Weekly build
    branches:
      include:
        - main
    always: true

resources:
  repositories:
    - repository: templates
      type: github
      name: osisoft/OSI-Samples
      endpoint: osisoft/OSI-Samples
      ref: 'generalize-appsettings'

variables:
  - template: '/miscellaneous/build_templates/variables.yml@templates'
  - name: analysisProject
    value: SDS_Angular

jobs:
  - job: Tests
    pool:
      name: 00-OSIManaged-Test
      demands: COMPUTERNAME -equals $(buildAgent)
    variables:
      - name: login
        value: $(AuthorizationUsername)
      - name: pass
        value: $(AuthorizationPassword)
      - name: client_id
        value: $(ClientId)
      - name: tenantId
        value: $(TenantId)
      - name: namespaceId
        value: $(NamespaceId)
      - name: communityId
        value: $(CommunityId)
    steps:
      - template: '/miscellaneous/build_templates/appsettings.yml@templates'
        parameters:
          secrets: 'AuthorizationUsername, AuthorizationPassword'
          appsettings: cred.json
          placeholder: cred.placeholder.json

      - template: '/miscellaneous/build_templates/appsettings.yml@templates'
        parameters:
          secrets: 'ClientId'
          appsettings: oidc.config.placeholder.json
          placeholder: oidc.config.json

      - template: '/miscellaneous/build_templates/appsettings.yml@templates'
        parameters:
          secrets: 'TenantId, NamespaceId, CommunityId'
          appsettings: sdsconfig.json
          placeholder: sdsconfig.placeholder.json

      - script: npm ci
        displayName: 'Install dependencies'

      - script: npm run e2e
        displayName: 'Run tests'

      - task: PublishTestResults@2
        inputs:
          testResultsFormat: JUnit
          testResultsFiles: '*.xml'
          failTaskOnFailedTests: true
          searchFolder: '$(Build.SourcesDirectory)/TestResults'
          testRunTitle: '$(Agent.JobName) on $(Agent.OS)'
        displayName: 'Publish test results'
        condition: always()

  - job: Analysis
    pool:
      name: 00-OSIManaged-Containers
      demands: Agent.OS -equals Windows_NT
    variables:
      - name: login
        value: $(AuthorizationUsername)
      - name: pass
        value: $(AuthorizationPassword)
      - name: client_id
        value: $(ClientId)
      - name: tenantId
        value: $(TenantId)
      - name: namespaceId
        value: $(NamespaceId)
      - name: communityId
        value: $(CommunityId)
    steps:
      - template: '/miscellaneous/build_templates/appsettings.yml@templates'
        parameters:
          secrets: 'AuthorizationUsername, AuthorizationPassword'
          appsettings: cred.json
          placeholder: cred.placeholder.json

      - template: '/miscellaneous/build_templates/appsettings.yml@templates'
        parameters:
          secrets: 'ClientId'
          appsettings: oidc.config.placeholder.json
          placeholder: oidc.config.json

      - template: '/miscellaneous/build_templates/appsettings.yml@templates'
        parameters:
          secrets: 'TenantId, NamespaceId, CommunityId'
          appsettings: sdsconfig.json
          placeholder: sdsconfig.placeholder.json

      - script: npm ci
        displayName: 'Install dependencies'

      - script: npm run build
        displayName: 'Build'

      - template: '/miscellaneous/build_templates/analysis.yml@templates'
